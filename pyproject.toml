[build-system]
requires = ["setuptools>=77", "wheel"]
build-backend = "setuptools.build_meta"

# ---------------------------------------------------------------------
[project]
name = "ngraph"
version = "0.6.1"
description = "A tool and a library for network modeling and capacity analysis."
readme = "README.md"
authors = [{ name = "Andrey Golovanov" }]
license = "MIT"
license-files = ["LICENSE"]
requires-python = ">=3.9"

classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]

# Runtime deps
dependencies = [
    "geopy",
    "networkx",
    "pyyaml",
    "numpy",
    "pandas",
    "matplotlib",
    "seaborn",
]

# Dev/CI extras
[project.optional-dependencies]
dev = [
    "pytest>=8",
    "pytest-cov",
    "pytest-benchmark",
    "pytest-mock",
    "ruff",
    "mkdocs-material",
    "pdoc",
]
[project.scripts]
ngraph = "ngraph.cli:main"


# ---------------------------------------------------------------------
# Pytest flags
[tool.pytest.ini_options]
addopts = "--cov=ngraph --cov-fail-under=85 --cov-report term-missing"

# ---------------------------------------------------------------------
# Tell setuptools to package ONLY the 'ngraph' package tree
[tool.setuptools.packages.find]
include = ["ngraph*"]          # anything under ngraph/
exclude = ["tests*", "notebooks*", "examples*", "dev*"]

[tool.ruff]
# Black-compatible defaults
line-length = 88
indent-width = 4

[tool.ruff.lint]
#  Core E/F rules plus Bugbear (B) and import-sorter (I)
select = ["E4", "E7", "E9", "F", "B", "I"]
ignore = ["E501"]            # long lines handled by the formatter
fixable = ["ALL"]            # allow auto-fix on save

[tool.ruff.lint.isort]
known-first-party = ["ngraph"]  # make ngraph imports “local”

[tool.ruff.format]
quote-style = "double"          # match Black
skip-magic-trailing-comma = false
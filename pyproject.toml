[build-system]
requires = ["setuptools>=77", "wheel"]
build-backend = "setuptools.build_meta"

# ---------------------------------------------------------------------
[project]
name = "ngraph"
version = "0.7.1"
description = "A tool and a library for network modeling and capacity analysis."
readme = "README.md"
authors = [{ name = "Andrey Golovanov" }]
license = "MIT"
license-files = ["LICENSE"]
requires-python = ">=3.11"

classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
]

# Runtime deps
dependencies = [
    "geopy",
    "networkx",
    "pyyaml",
    "numpy",
    "pandas",
    "matplotlib",
    "seaborn",
]

# Dev / CI extras
[project.optional-dependencies]
dev = [
    # testing
    "pytest>=8",
    "pytest-cov",
    "pytest-benchmark",
    "pytest-mock",
    "pytest-timeout",
    # docs
    "mkdocs-material",
    "pdoc",
    # style + type checking
    "ruff==0.11.13",
    "pyright",
    # pre-commit hooks
    "pre-commit",
    # build
    "build",
    # publishing
    "twine",
]

[project.scripts]
ngraph = "ngraph.cli:main"

# ---------------------------------------------------------------------
# Pytest flags
[tool.pytest.ini_options]
addopts = "--cov=ngraph --cov-fail-under=85 --cov-report term-missing"
timeout = 30

# ---------------------------------------------------------------------
# Package discovery
[tool.setuptools.packages.find]
include = ["ngraph*"]
exclude = ["tests*", "notebooks*", "examples*", "dev*"]

# ---------------------------------------------------------------------
# Ruff
[tool.ruff]
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "B", "I"]   # core + Bugbear + isort
ignore = ["E501"]                             # long lines handled by formatter
fixable = ["ALL"]

[tool.ruff.lint.isort]
known-first-party = ["ngraph"]

[tool.ruff.format]
quote-style = "double"
skip-magic-trailing-comma = false

# ---------------------------------------------------------------------
# Pyright / Pylance
[tool.pyright]
typeCheckingMode = "standard"     # balanced level
pythonVersion = "3.11"
exclude = [
    "tests/**",                   # tests often use dynamic patterns
    "**/venv/**",                # virtual environments (generic)
    "**/*venv/**",               # virtual environments (various naming)
    "build/**",                  # build artifacts
    "dist/**",                   # distribution files
    "**/__pycache__/**",         # Python cache files
    "**/*.egg-info/**"           # egg info directories
]
reportMissingTypeStubs = "warning"
reportUnknownMemberType = "none"
reportUnknownVariableType = "none"
reportUnknownArgumentType = "none"
